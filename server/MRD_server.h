//
// Created by korot on 03/02/2025.
//

#ifndef MRD_SERVER_H
#define MRD_SERVER_H

#include <vector>
#include "Buffer.h"


namespace MRD{
    struct Response {
        uint32_t status;
        std::vector<uint8_t> data;
    };

    struct Conn {
        int fd = -1;
        // application's intention, for the event loop
        bool want_read = false;
        bool want_write = false;
        bool want_close = false;
        // buffered input and output
        Buffer incoming{};  // data to be parsed by the application
        Buffer outgoing{};  // responses generated by the application
    };
    class Server {
    public:

        static void init();

        static int main_loop();

    private:
        static inline int fd;
        static inline std::vector<Conn* > fd2conn;

        static bool try_one_request(Conn *conn);

        static void handle_write(Conn *conn);

        static void handle_read(Conn *conn);


    };
}
#endif //MRD_SERVER_H
